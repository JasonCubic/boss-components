/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface BossButton {
      'toggle': (selector: any) => void;
    }

    interface BossCollapse {
      'collapse': (passedConfig: any) => void;
    }

    interface BossDropdown {
      'boundary': any;
      'display': string;
      'flip': boolean;
      'hideDropdown': () => void;
      'keepOpen': boolean;
      'offset': any;
      'reference': any;
      'setDropdownVisibility': (toShow: any) => void;
      'show': boolean;
      'showDropdown': () => void;
      'toggle': () => void;
      'update': () => void;
    }
  }


    interface HTMLBossButtonElement extends StencilComponents.BossButton, HTMLStencilElement {}

    var HTMLBossButtonElement: {
      prototype: HTMLBossButtonElement;
      new (): HTMLBossButtonElement;
    };
    

    interface HTMLBossCollapseElement extends StencilComponents.BossCollapse, HTMLStencilElement {}

    var HTMLBossCollapseElement: {
      prototype: HTMLBossCollapseElement;
      new (): HTMLBossCollapseElement;
    };
    

    interface HTMLBossDropdownElement extends StencilComponents.BossDropdown, HTMLStencilElement {}

    var HTMLBossDropdownElement: {
      prototype: HTMLBossDropdownElement;
      new (): HTMLBossDropdownElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'boss-button': JSXElements.BossButtonAttributes;
    'boss-collapse': JSXElements.BossCollapseAttributes;
    'boss-dropdown': JSXElements.BossDropdownAttributes;
    }
  }

  namespace JSXElements {

    export interface BossButtonAttributes extends HTMLAttributes {

    }

    export interface BossCollapseAttributes extends HTMLAttributes {

    }

    export interface BossDropdownAttributes extends HTMLAttributes {
      'boundary'?: any;
      'display'?: string;
      'flip'?: boolean;
      'keepOpen'?: boolean;
      'offset'?: any;
      'onHiddenBossDropdown'?: (event: CustomEvent) => void;
      'onHideBossDropdown'?: (event: CustomEvent) => void;
      'onShowBossDropdown'?: (event: CustomEvent) => void;
      'onShownBossDropdown'?: (event: CustomEvent) => void;
      'reference'?: any;
      'show'?: boolean;
    }
  }

  interface HTMLElementTagNameMap {
    'boss-button': HTMLBossButtonElement
    'boss-collapse': HTMLBossCollapseElement
    'boss-dropdown': HTMLBossDropdownElement
  }

  interface ElementTagNameMap {
    'boss-button': HTMLBossButtonElement;
    'boss-collapse': HTMLBossCollapseElement;
    'boss-dropdown': HTMLBossDropdownElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;